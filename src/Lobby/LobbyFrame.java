package Lobby;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import org.jspace.ActualField;
import org.jspace.FormalField;

import PingPong.Player;

/**
 *
 * @author lauri
 */
public class LobbyFrame extends javax.swing.JFrame {

	public Player p1;
	public Player p2;
	public String nameOpponment;
	public boolean isHost;
	public boolean isReady = false;
	
	public LobbyFrame(Player p2, String nameOpponment) {
    	this.p2 = p2;
    	this.nameOpponment = nameOpponment;
    	this.isHost=false;
    	PlayerConnect playerConnect = new PlayerConnect();
    	Thread playerThread = new Thread(playerConnect);
    	playerThread.start();
        initComponents();
    }
	
    /**
     * Creates new form LobbyFrame
     * @param p1 
     */
    public LobbyFrame(Player p1) {
    	this.p1 = p1;
    	this.isHost=true;
    	CheckReadyState checkReadyState = new CheckReadyState();
    	Thread checkReadyStateThread = new Thread(checkReadyState);
    	checkReadyStateThread.start();
    	UpdatePlayersList updatePlayersList = new UpdatePlayersList();
    	Thread updatePlThread = new Thread(updatePlayersList);
    	updatePlThread.start();
        initComponents();
    }
    
    public LobbyFrame() {
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        if(p1!=null) {
        	jTextField1.setText(p1.getName());
        }else if(nameOpponment!=null) {
        	jTextField1.setText(nameOpponment);
        }
        if(p2!=null) {
        	jTextField2.setText(p2.getName());
        }
        
        if(isHost) {
        	this.setTitle(p1.getName());
        }else {
        	this.setTitle(p2.getName());
        }

        jLabel1.setText("Player 1:");
        
        jLabel2.setText("Player 2:");

        jButton1.setText("Ready");

        jButton2.setText("Leave");
        
        
        //Ready
        jButton1.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					if(isHost) {
						if(!isReady) {
							isReady = true;
						}else {
							isReady = false;
						}
					}else {
						if(!isReady) {
							isReady = true;
							System.out.println(p2.getName()+" isReady with HostID="+p2.getHostID());
							p2.joinAvailable.put(p2.getHostID(),true);
						}else {
							isReady = false;
							System.out.println(p2.getName()+" !isReady with HostID="+p2.getHostID());
							p2.joinAvailable.get(new ActualField(p2.getHostID()),new FormalField(Boolean.class));
						}
						
					}
				} catch (InterruptedException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
        
        //Leave
        jButton2.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
			}
		});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param p1 
     * @param args the command line arguments
     */
    public static void open(Player p1) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LobbyFrame(p1).setVisible(true);
            }
        });
    }
    
    public static void open(Player p1, String nameOpponment) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LobbyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LobbyFrame(p1,nameOpponment).setVisible(true);
            }
        });
        
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    // End of variables declaration
    
    public class CheckReadyState implements Runnable {

		@Override
		public void run() {
			while(true) {
				try {
					System.out.println(p1.getName()+" waiting for hostID="+p1.hostID);
					Object[] t = p1.joinAvailable.get(new ActualField(p1.hostID), new FormalField(Boolean.class));
					if(!isReady) {
						System.out.println(p1.getName()+ " wasnt ready putting "+t[0]+" "+t[1]);
						p1.joinAvailable.put(t[0],t[1]);
					}else
					if((boolean)t[1] && isReady) {
						//p1.joinAvailable.get(new FormalField(Boolean.class));
						//Host loads the gameFrame and waits for the players to connect
						System.out.println("ReadyStateReceived from player 2");
						p1.startGame();
						//This orders the players to connect
						System.out.println("putting hostid="+p1.hostID);
						p1.hostAvailable.put(p1.hostID,true);
						break;
					}
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		}
		
	}
    
    public class PlayerConnect implements Runnable {

		@Override
		public void run() {
			while(true) {
				try {
					Object[] t = p2.hostAvailable.get(new ActualField(p2.hostID),new FormalField(Boolean.class));
					if((boolean)t[1]) {
						p2.startGame();
						break;
					}
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		}
		
	}
    
    public class UpdatePlayersList implements Runnable {

		@Override
		public void run() {
			while(true) {
				try {
					Object[] t = p1.joinAvailable.get(new FormalField(String.class));
					if((String)t[0] !=null) {
						nameOpponment = (String)t[0];
					}
					jTextField2.setText(nameOpponment);
					break;
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		}
		
	}
}
